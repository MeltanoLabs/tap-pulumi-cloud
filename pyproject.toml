[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [
  "poetry-core==1.6",
  "poetry-dynamic-versioning",
]

[tool.poetry]
name = "tap-pulumi-cloud"
version = "0.0.0"
description = "`tap-pulumi-cloud` is a Singer tap for Pulumi Cloud, built with the Meltano SDK for Singer Taps."
authors = [
  "Edgar Ramírez-Mondragón <edgarrm358@gmail.com>",
]
keywords = [
  "ELT",
  "singer.io",
  "Pulumi Cloud",
]
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/edgarrmondragon/tap-pulumi-cloud"
repository = "https://github.com/edgarrmondragon/tap-pulumi-cloud"
documentation = "https://github.com/edgarrmondragon/tap-pulumi-cloud#readme"

[tool.poetry.dependencies]
pyhumps = "^3.8.0"
python = ">=3.9"
requests-cache = "^1.0.1"
singer-sdk = "~=0.44.3"

[tool.poetry.group.dev.dependencies]
singer-sdk = { version = "~=0.44.3", extras = [
  "testing",
] }

[tool.poetry.scripts]
# CLI declaration
"tap-pulumi-cloud" = "tap_pulumi_cloud.tap:TapPulumiCloud.cli"

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
target-version = "py39"

line-length = 88
src = [
  "tap_pulumi_cloud",
  "tests",
]
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # missing-type-self
  "COM812", # missing-trailing-comma
  "DJ",     # flake8-django
  "FIX002", # line-contains-todo
  "ISC001", # single-line-implicit-string-concatenation
]

lint.per-file-ignores."noxfile.py" = [
  "ANN",
]
lint.per-file-ignores."tap_pulumi_cloud/streams.py" = [
  "RUF012", # mutable-class-default
]
lint.per-file-ignores."tests/*" = [
  "ANN201", # missing-return-type-public-function
  "S101",   # assert
  "SLF001", # private-member-access
]
lint.unfixable = [
  "ERA", # Don't remove commented-out code
]
lint.flake8-annotations.allow-star-arg-any = true
lint.isort.known-first-party = [
  "tap_pulumi_cloud",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"

[tool.pytest.ini_options]
addopts = "-vvv"

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "backoff.*",
]
